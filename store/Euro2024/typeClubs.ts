// Generated by https://jsonformatter.org/json-to-typescript for https://gaming.uefa.com/en/uclpredictor/api/v1/competition/3/season/current/predictor/matches/${matchday_id}
export default interface Result {
  data: Data_club;
}

export interface Data_club {
  items: Item[];
  share_page: null;
  share_page_hash: null;
  sync: Sync;
}

export interface Item {
  id: number;
  home_team: Team;
  away_team: Team;
  winner_team_id: number | null;
  status: Status;
  home_team_score: number;
  away_team_score: number;
  home_team_pen_score: number;
  away_team_pen_score: number;
  home_team_agg_score: null | number;
  away_team_agg_score: null | number;
  related_match_score: null | number;
  leg_number: null | number;
  points_count_finished: boolean;
  start_at: string;
  match_id: number;
  predictable: boolean;
  has_penalties: boolean;
  has_extra_time: boolean;
  phase: null;
  prediction_types: PredictionType[];
  tbc: boolean;
  joker_multiplier: number;
  prediction: null;
  tenant_season_matchday_id: number;
  match_friends: MatchFriends;
}

export interface Team {
  id: number;
  ref_id: string;
  name: string;
  name_short: string;
  image: Image;
  active: null;
}

export interface Image {
  large: string;
  small: string;
  medium: string;
}

export interface MatchFriends {
  count: number;
  random_friend_name: string;
  items: unknown[];
}

export interface PredictionType {
  type: Type;
  name: Name;
  category: Category;
  position: number;
  primary: boolean;
  max_points: number;
  most_popular_predictions: MostPopularPrediction[];
}

export enum Category {
  Fixture = "fixture",
  Team = "team",
}

export interface MostPopularPrediction {
  id: number;
  value: string;
  popularity: number;
  percentage: number;
  home_team_score: string;
  away_team_score: string;
}

export enum Name {
  FirstTeamToScore = "First team to score",
  GamePredictionTypesFixtureScoreName = "game.prediction.types.fixture_score.name",
}

export enum Type {
  FirstTeamScore = "first_team_score",
  FixtureScore = "fixture_score",
}

export enum Status {
  NotStarted = "not_started",
  // These two are guesses and may be wrong
  Started = "started",
  Finished = "finished",
}

export interface Sync {
  mhash: string;
  s: number;
}
